<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" InitialTargets="Validate" DefaultTargets="Bootstrap;Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--
        The main Ciao point of entry. Continuous Integration builds should invoke
        this build script with MSBuild 4.0 or later.

        Do not modify this file. To customize your build, modify Ciao.props and Ciao.targets.
    -->
    <Import Project="Ciao.props" Condition="Exists('Ciao.props')"/>

    <PropertyGroup>
        <ProjectDirectory>$(MSBuildThisFileDirectory)</ProjectDirectory>
        <BuildDirectory Condition=" '$(BuildDirectory)' == '' ">$([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', 'build'))$([System.IO.Path]::DirectorySeparatorChar)</BuildDirectory>
        <ToolsDirectory Condition=" '$(ToolsDirectory)' == '' ">$([System.IO.Path]::Combine('$(BuildDirectory)', 'tools'))$([System.IO.Path]::DirectorySeparatorChar)</ToolsDirectory>
        <NuGetExePath Condition=" '$(NuGetExePath)' == '' ">$([System.IO.Path]::Combine('$(ToolsDirectory)', 'NuGet.exe'))</NuGetExePath>

        <NuGetCommand Condition=" '$(OS)' == 'Windows_NT' ">"$(NuGetExePath)"</NuGetCommand>
        <NuGetCommand Condition=" '$(OS)' != 'Windows_NT' ">mono --runtime=v4.0.30319 $(NuGetExePath)</NuGetCommand>
        <NuGetClientDownloadUrl Condition=" '$(NuGetClientDownloadUrl)' == '' ">https://www.nuget.org/nuget.exe</NuGetClientDownloadUrl>
    </PropertyGroup>

    <PropertyGroup>
        <CiaoVersion>1.1.0</CiaoVersion>
        <CiaoPackageEntryProject>$(ProjectDirectory)packages\Ciao.$(CiaoVersion)\tools\Ciao.targets</CiaoPackageEntryProject>
    </PropertyGroup>

    <PropertyGroup>
        <BootstrapDependsOn>
            DownloadNuGetCommandLineClient;
            RestoreSolutionPackages;
        </BootstrapDependsOn>
    </PropertyGroup>

    <Target Name="Validate">
        <Error Text="$(MSBuildThisFileDirectory)Ciao.props must define the SolutionFile property" Condition=" '$(SolutionFile)' == '' "/>
        <Error Text="The Solution $(SolutionFile) does not exist" Condition="!Exists('$(SolutionFile)')"/>
    </Target>

    <Target Name="Bootstrap" DependsOnTargets="$(BootstrapDependsOn)"/>

    <Target Name="RestoreSolutionPackages" DependsOnTargets="DownloadNuGetCommandLineClient">
        <Exec Command="$(NuGetCommand) restore &quot;$(SolutionFile)&quot; -NonInteractive"/>
        <PropertyGroup>
            <_CiaoRestoreSolutionPackagesCompleted>True</_CiaoRestoreSolutionPackagesCompleted>
        </PropertyGroup>
    </Target>

    <!--
        Standard Targets

        These targets are defined in Ciao.targets which will override them when the Ciao package
        is restored and present. In case the build is restoring Ciao these targets are here
        to enable targets to be executed after Ciao is restored.
    -->

    <Target Name="Clean" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Clean" Properties="$(_CiaoProperties)"/>
    </Target>

    <Target Name="Build" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Build" Properties="$(_CiaoProperties)"/>
    </Target>

    <Target Name="Compile" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Compile" Properties="$(_CiaoProperties)"/>
    </Target>

    <Target Name="Test" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Test" Properties="$(_CiaoProperties)"/>
    </Target>

    <Target Name="Package" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Package" Properties="$(_CiaoProperties)"/>
    </Target>

    <Target Name="Rebuild" DependsOnTargets="ValidateCiaoInstalled;CreateProperties">
        <MSBuild Projects="$(CiaoPackageEntryProject)" Targets="Rebuild" Properties="$(_CiaoProperties)"/>
    </Target>


    <!-- End of Standard Targets -->

    <Target Name="ValidateCiaoInstalled">
        <Error Text="Ciao targets must be restored using the Bootstrap target before executing other targets."
               Condition="!Exists('$(CiaoPackageEntryProject)') and '$(_CiaoRestoreSolutionPackagesCompleted)' != 'True' "/>
        <Error Text="Ciao targets file '$(CiaoPackageEntryProject)' does not exist. Make sure to install Ciao in $(SolutionFile)."
               Condition="!Exists('$(CiaoPackageEntryProject)')"/>
    </Target>

    <Target Name="CreateProperties">
        <PropertyGroup>
            <_CiaoProperties>
                ImportCiaoProperties=True;
                ProjectDirectory=$(ProjectDirectory);
                SolutionFile=$([System.IO.Path]::Combine('$(ProjectDirectory)', '$(SolutionFile)'));
                BuildDirectory=$(BuildDirectory);
                ToolsDirectory=$(ToolsDirectory);
                NuGetExePath=$(NuGetExePath);
            </_CiaoProperties>
        </PropertyGroup>
    </Target>

    <Target Name="DownloadNuGetCommandLineClient" Condition="!Exists('$(NuGetExePath)')">
        <MakeDir Directories="$(ToolsDirectory)"/>
        <Message Text="Downloading $(NuGetClientDownloadUrl) to $(NuGetExePath)"/>
        <DownloadNuGet OutputFilename="$(NuGetExePath)" Url="$(NuGetClientDownloadUrl)" Condition=" '$(OS)' == 'Windows_NT' "/>
        <Exec Command="curl -L -o &quot;$(NuGetExePath)&quot; $(NuGetClientDownloadUrl)" Condition=" '$(OS)' != 'Windows_NT' "/>
    </Target>

    <Import Project="$(CiaoPackageEntryProject)" Condition="Exists('$(CiaoPackageEntryProject)')"/>

    <UsingTask TaskName="DownloadNuGet" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <Url ParameterType="System.String" Required="true" />
            <OutputFilename ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Core" />
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Using Namespace="System.Net" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                try {
                    OutputFilename = Path.GetFullPath(OutputFilename);

                    WebClient webClient = new WebClient();
                    webClient.DownloadFile(Url, OutputFilename);

                    return true;
                }
                catch (Exception ex) {
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>
